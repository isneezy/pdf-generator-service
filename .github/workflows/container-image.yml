name: container-images

on:
  push:
    branches: [master, next]
    # paths: [packages/service, "!**/*.md"]
  pull_request:
    branches: [master, next]
    # paths: [packages/service, "!**/*.md"]

jobs:
  container-images:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to Quay.io
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}

      - name: Read service version
        id: service-version
        run: |
          ls -la
          echo "VERSION=$(cat packages/service/package.json | jq .version -r)" >> $GITHUB_OUTPUT
      - name: Echo service version
        run: echo ${{ steps.service-version.outputs.VERSION }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./packages/service
          tags:
            isneezy/pdf-generator:${{ steps.service-version.outputs.VERSION }},
            isneezy/pdf-generator:${{ github.ref_name }},
            isneezy/pdf-generator:latest,
            isneezy/pdf-generator-service:${{ steps.service-version.outputs.VERSION }},
            isneezy/pdf-generator-service:${{ github.ref_name }},
            isneezy/pdf-generator-service:latest,
            quay.io/isneezy/pdf-generator-service:${{ steps.service-version.outputs.VERSION }},
            quay.io/isneezy/pdf-generator-service:${{ github.ref_name }},
            quay.io/isneezy/pdf-generator-service:latest,
          push: ${{ (contains(github.ref, 'master') || contains(github.ref, 'next')) }}


#  build-docker-image:
#    # if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: build
#        run: docker build --cache-from isneezy/pdf-generator -t isneezy/pdf-generator .
#      - name: lanunch docker container
#        run: docker run --rm -p 3000:3000 --name=service -d isneezy/pdf-generator
##      - name: Test Generate Endpoint
##        run: |
##          curl -o test.pdf --location --request POST 'localhost:3000/generate' \
##          --header 'Content-Type: application/json' \
##          --data-raw '{
##              "content": "<h2>Helo</h2>"
##          }'
##          stat test.pdf
#      - name: cleanup
#        run: docker rm -f service && docker image rm isneezy/pdf-generator:latest

